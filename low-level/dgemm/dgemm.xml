<?xml version="1.0" encoding="UTF-8"?>
<!-- dgemm benchmark -->
<jube>
  <benchmark name="dgemm_benchmark" outpath="bench_run">
    
    <parameterset name="systemParameter" init_with="platform.xml">
      <parameter name="mail"></parameter>
      <parameter name="nodes" type="int">1</parameter>
      <parameter name="taskspernode" type="int">1</parameter>
<!--       <parameter name="i" type="int">0,1,2,3</parameter> -->
      <parameter name="threadspertask" type="int" mode="python" separator=";">
	{
          "juwels":        "1;24;48",
          "juwelsbooster": "1;24;48",
          "jureca":        "1;64;128",
          "jusuf":         "1;64;128",
         }["${systemname}"]
      </parameter>
      <parameter name="timelimit">00:20:00</parameter>
      <parameter name="executable"></parameter>
      <parameter name="queue" mode="python">{
          "juwels":        "batch --disable-turbomode",
          "juwelsbooster": "booster",
          "jureca":        "batch",
          "jusuf":         "batch"
        }["${systemname}"]</parameter>
      <parameter name="measurement">${load_modules}; time -p</parameter>
      <parameter name="account" mode="python">{
          "juwels":        "slai",
          "juwelsbooster": "slai",
          "jureca":        "slai",
          "jusuf":         "slai",
        }["${systemname}"]</parameter>
      
      <parameter name="CPU_AFFINITY" type="int" mode="python">$threadspertask-1</parameter>
      <parameter name="BLIS_JC" mode="python" separator=";">
        {
          "juwels":        {1:1, 24:2, 48:4},
          "jureca":        {1:1, 24:2, 48:4},
          "jusuf":         {1:1, 64:4, 128:8},
         }["${systemname}"]
      </parameter>
      <parameter name="BLIS_IC" mode="python" separator=";">
        {
          "juwels":        {1:1, 24:12, 48:12},
          "juwels":        {1:1, 24:12, 48:12},
          "jusuf":         {1:1, 64:4, 128:4},
         }["${systemname}"]
      </parameter>
      <parameter name="BLIS_JR" mode="python" separator=";">
        {
          "juwels":        {1:1, 24:1, 48:1},
          "juwels":        {1:1, 24:1, 48:1},
          "jusuf":         {1:1, 64:4, 128:4},
         }["${systemname}"]
      </parameter>
      <parameter name="BLISEXPORT" mode="python" separator=";">
        "export BLIS_JC_NT="+str($BLIS_JC[$threadspertask])+" BLIS_IC_NT="+str($BLIS_IC[$threadspertask])+" BLIS_JR_NT="+str($BLIS_JR[$threadspertask]) if '$numlib_compile' == 'BLIS' else ""
      </parameter>
      <parameter name="additional_job_config">
export OMP_PROC_BIND=TRUE
export OMP_PLACES=cores
export GOMP_CPU_AFFINITY=0-$CPU_AFFINITY
export OMP_NUM_THREADS=$${SLURM_CPUS_PER_TASK}
$BLISEXPORT
      </parameter>
      
      <parameter name="executable">echo ${NREPEATS} ${NLAST} ${NLAST} ${NINC} | ./compile/src/dgemm.x</parameter>
    </parameterset>

    <parameterset name="environment">
      <parameter name="systemname" mode="shell">cat /etc/FZJ/systemname | tr -d "\n"</parameter>
<!--       <parameter name="numlib" separator="!">BLIS</parameter> -->
      <parameter name="Stage" separator="!" mode="python">{
          "BLIS/2.2-amd":    "Devel-2020",
          "imkl/2019.3.199": "2019a",
          "imkl/2019.5.281": "2019a",
          "imkl/2020.2.254": "Devel-2020",
          "imkl/2020.4.304": "2020b",
          "BLIS/0.8":        "2020b",
          "OpenBLAS/0.3.12": "2020b",
        }["${numlib}"]</parameter>
      <parameter name="numlib" separator="," mode="python">
        {
          "juwels":        "BLIS/0.8, imkl/2020.4.304, OpenBLAS/0.3.12",
          "juwelsbooster": "BLIS/2.2-amd, imkl/2019.3.199, imkl/2020.2.254",
          "jureca":        "imkl/2020.2.254",
<!--           "jusuf":         "BLIS/2.2-amd, imkl/2019.3.199, imkl/2020.2.254, imkl/2020.4.304", -->
          "jusuf":        "BLIS/0.8, imkl/2020.4.304, OpenBLAS/0.3.12",
        }["${systemname}"]
      </parameter>
      <parameter name="numlib_compile" separator="!" mode="python">"${numlib}".split('/')[0]</parameter>
      <parameter name="load_modules" separator="!" mode="python">  {
          "juwels":        "module purge; module use $OTHERSTAGES; ml use $MYOTHERSTAGES; module load Stages/${Stage}; module load GCC OpenMPI ${numlib}",
          "juwelsbooster": "module purge; module use $OTHERSTAGES; module load Stages/Devel-2020; module load GCC OpenMPI ${numlib}",
          "jureca":        "module purge; module use $OTHERSTAGES; ml use $MYOTHERSTAGES; module load Stages/${Stage}; module load GCC OpenMPI ${numlib}",
          "jusuf":         "module purge; module use $OTHERSTAGES; ml use $MYOTHERSTAGES; module load Stages/${Stage}; module load GCC OpenMPI ${numlib}",
        }["${systemname}"]
      </parameter>
      
    </parameterset>
    
    
    <parameterset name="config">
      
      <parameter name="NREPEATS" type="int">10</parameter>
<!--       <parameter name="NFIRST" type="int">128</parameter> -->
      <parameter name="NFIRST" type="int" mode="python">{
           "64":    "1000",
          "128":    "1000",
          "256":    "1000"
         }.get("${threadspertask}","128")</parameter>
      <parameter name="NLAST" type="int" mode="python" separator=";">{
            "1":     "8000",
            "2":     "8000",
            "4":     "8000",
            "8":     "8000",
           "12":     "8000",
           "16":     "8000",
           "24":    "19000",
           "32":    "19000",
           "48":    "24000",
           "64":    "24000",
          "128":    "24000",
          "256":    "24000"
         }["${threadspertask}"] </parameter>
      <parameter name="NINC" type="int" mode="python">{
           "64":    "1000",
          "128":    "1000",
          "256":    "1000"
         }.get("${threadspertask}","100")</parameter>
      
    </parameterset>


    <fileset name="sources">
      <copy>src</copy>
    </fileset>
    
    <step name="compile">
      <use>environment</use>
      <use>sources</use>

      <do>
        ${load_modules}
        cd src
        make ${numlib_compile}
      </do>
      
    </step>

    <step name="execute" depend="compile" iterations="1">
      <use>systemParameter</use>
      <use>environment</use>
      <use>config</use>
      <use from="platform.xml">executeset</use>
      <use from="platform.xml">executesub</use>
      <use from="platform.xml">jobfiles</use>
      
      <do done_file="$done_file">$submit $submit_script</do> 
    </step>

    <!-- Regex pattern -->
    <patternset name="jobnumber">
      <pattern name="jobid">Submitted batch job $jube_pat_int</pattern>
      <pattern name="status" mode="perl">'`sacct --format State -j $job_id | head -n 3 | tail -n 1`'</pattern>
      <pattern name="exit_code" mode="perl">'`sacct --format ExitCode -j $job_id | head -n 3 | tail -n 1`'</pattern>
    </patternset>

    <patternset name="runtimepattern">
      <pattern name="runtime" type="float" unit="s">real ${jube_pat_fp}</pattern>
      <pattern name="error_code" type="int">JUBE_ERR_CODE=$jube_pat_int</pattern>
    </patternset>
    
    <patternset name="pattern">
      <pattern name="GFLOPS" type="float">${jube_pat_bl}${NLAST}${jube_pat_bl}${jube_pat_nfp}${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}${jube_pat_nfp}</pattern>
      <pattern name="GFLOPSpcore" type="float">${jube_pat_bl}${NLAST}${jube_pat_bl}${jube_pat_nfp}${jube_pat_bl}${jube_pat_nfp}${jube_pat_bl}${jube_pat_fp}</pattern>
      <pattern name="time" type="float" unit="s">${jube_pat_bl}${NLAST}${jube_pat_bl}${jube_pat_fp}${jube_pat_bl}${jube_pat_nfp}${jube_pat_bl}${jube_pat_nfp}</pattern>
    </patternset>

    <!-- Analyse -->
    <analyser name="analyse" reduce="true">
      <use>pattern</use>
      <analyse step="execute">
        <file>job.out</file>
        <file use="runtimepattern">job.err</file>
        <file use="jobnumber">stdout</file>
      </analyse>
    </analyser>

    <!-- Create result table -->
    <result>
      <use>analyse</use>
      <table name="result" style="pretty" sort="numlib,threadspertask">
        <column title="Job ID">jobid</column>
        <column>systemname</column>
        <column>numlib</column>
        <column>error_code</column>
        <column>runtime</column>
        <column>nodes</column>
        <column>taskspernode</column>
        <column>threadspertask</column>
        <column title="n=m=k">NLAST</column>
        <column>time_avg</column>
        <column>GFLOPS_avg</column>
        <column>GFLOPS_std</column>
        <column>GFLOPS_min</column>
        <column>GFLOPS_max</column>
        <column>GFLOPSpcore_avg</column>
      </table>

      <table name="result-csv" style="csv" sort="numlib,threadspertask">
        <column>jobid</column>        
        <column>systemname</column>
        <column>numlib</column>
        <column>error_code</column>
        <column>runtime</column>
        <column>nodes</column>
        <column>taskspernode</column>
        <column>threadspertask</column>
        <column>NLAST</column>
        <column>time</column>
        <column title="GFLOPS">GFLOPS_avg</column>
        <column>GFLOPSpcore</column>
      </table>
    </result>

  </benchmark>
</jube>
 
